#!/bin/bash

# This checks /proc/cmdline for the LAST 'flash=' statement, and truncates its
# value to find a candidate device to be used as an MBR hosting grub's default
# next boot entry. It will mount /flash exec and use grub-mbr-default from
# there to ensure that everything works as expected.

# If an 'mbr=' statement is present, it will use it instead of the flash, and
# take it as a comma-separated list of MBR devices. This is useful with RAID1
# for instance. Eg: mbr=sda,sdb

# get out of /flash just in case.
cd /

export PATH=/bin:/sbin:/usr/bin:/usr/sbin
FLASHDIR=/flash

flash="$(cat /proc/cmdline)"
if [ -n "${flash##*flash=*}" ]; then
  echo "No flash device specified in /proc/cmdline."
  exit 1
fi

flash=${flash##*flash=}
flash=${flash%% *}
[ -n "${flash##/dev/*}" ] && flash="/dev/$flash"

mbrlist=( )
mbr="$(cat /proc/cmdline)"
if [ -z "${mbr##*mbr=*}" ]; then
  # mbr specified in /proc/cmdline. It may be a comma-separated list.
  mbr=${mbr##*mbr=}
  mbr=${mbr%% *}
  for mbrdev in ${mbr//,/ }; do
    [ -n "$mbrdev" ] || continue
    [ -n "${mbrdev##/dev/*}" ] && mbrdev="/dev/$mbrdev"
    mbrlist[${#mbrlist[@]}]="$mbrdev"
  done
fi

if [ ${#mbrlist[@]} -eq 0 ]; then
  # mbr unspecified, use the one from flash.
  flashnum=${flash##*[^0-9]}
  mbr=${flash%$flashnum}
  mbrdev=${mbr##/dev/}
  while [ -n "$mbrdev" ] && ! grep -q "$mbrdev\( .*\)\?\$" /proc/partitions; do
    mbrdev=${mbrdev%?}
  done
  if [ -z "$mbrdev" ]; then
    echo "FATAL: MBR not found."
    echo "Please check the 'mbr' parameter in $FLASHDIR/boot/grub/menu.lst"
    exit 1
  fi
  [ -n "${mbrdev##/dev/*}" ] && mbrdev="/dev/$mbrdev"
  mbrlist[${#mbrlist[@]}]="$mbrdev"
fi

# unmounts /flash
umount_flash() {
  if ! umount -d $FLASHDIR >/dev/null 2>&1; then
    cd /
    if ! umount -d $FLASHDIR >/dev/null 2>&1; then
      echo "Error: cannot unmount $FLASHDIR"
      return 1
    else
      echo "Warning: ${0##*/} forgot to leave $FLASHDIR before unmounting it."
    fi
  fi
  return 0
}

### we get the grub-mbr-default tool from /flash, so that if for any reason we
### failed to access it, the image cannot be marked as valid.
                     
bin=$FLASHDIR/bin/grub-mbr-default

if ! mount -r $flash $FLASHDIR >/dev/null 2>&1; then
  echo "Error: mounting ${flash} on $FLASHDIR failed."
  exit 1
fi

if [ ! -x $bin ]; then
  echo "Error: grub-mbr-default not found in $FLASHDIR"
  umount_flash
  exit 1
fi

# look for the first working MBR
for mbrdev in "${mbrlist[@]}"; do
  next=$($bin -q "$mbrdev" 2>/dev/null) && break
done

if [ "$next" = "0" ]; then
  echo "Running in recovery mode."
elif [ "$next" = "2" ]; then
  echo "Active config suffered a power failure."
elif [ "$next" = "4" ]; then
  echo "Backup config suffered a power failure."
else
  bin="$bin -q"
fi
for mbrdev in "${mbrlist[@]}"; do
  echo "Validating boot on MBR device $mbrdev..."
  $bin $mbrdev -2
done
umount_flash
